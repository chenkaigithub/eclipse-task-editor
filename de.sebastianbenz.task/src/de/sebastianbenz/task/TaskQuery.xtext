grammar de.sebastianbenz.task.Query hidden(WS)

import "platform:/resource/de.sebastianbenz.task/model/Task.ecore"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate query "http://www.sebastianbenz.de/task/query/2011/"

Query:
	{Query} (expression=OrExpr)?
;

OrExpr returns Expression:
	AndExpr ({OrExpr.left=current} ('or' | '||') right=AndExpr)*;

AndExpr returns Expression :
	CompEqExpr ({AndExpr.left=current} ('and' | '&&') right=CompEqExpr)*;
 
CompEqExpr returns Expression :
	CompExpr ({CompEqExpr.left=current} operator=CompEqOperator right=CompExpr)*;
 
CompExpr returns Expression : 
	UnaryExpr ({CompExpr.left=current} operator=CompOperator right=UnaryExpr)*;

UnaryExpr returns Expression :
	Atom | ({UnaryExpr} ('not'|'!') expr=UnaryExpr);

Atom : 
	Value |
	Words | 
	ParenExpr 
;

Value:
	ProjectReference
	| Word
	| Phrase
	| TagReference
	| TextReference
	| TaskReference
;

ParenExpr :
	'(' {ParenExpr} expr=OrExpr ')';
	
ProjectReference :
	'project' ':' (value=ID | value = STRING)
;

TaskReference :
	'task' ':' (value=ID | value = STRING)
;

TextReference :
	'text' ':' (value=ID | value = STRING)
;


Words:
	values+=ID (values+=ID)+	
;

Word:
	value=ID	
;

Phrase:
	value=STRING	
;


TagReference:
	'@' value=ID	
;

enum CompEqOperator:
	EQUAL = '=' | NOT_EQUAL = '!=';

enum CompOperator:
	LESS_EQUAL = '<=' | LESS = '<' | GREATER_EQUAL = '>=' |  GREATER = '>';
	
terminal STRING	: 
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
			
			;
terminal ID: !('@'|'='|'<'|'>'|'!'|'('|')'|':'|' '|'\t'|'\r'|'\n'|'"'|'\''|'&' |'|') !(' '|'\t'|'\r'|'\n'|':')*;

terminal WS			: (' '|'\t'|'\r'|'\n')+;

terminal ANY_OTHER: .;
	